/*
 * generated by Xtext
 */
package net.sf.orcc.cal.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import net.sf.orcc.cal.services.CalGrammarAccess;

public class CalParser extends AbstractContentAssistParser {
	
	@Inject
	private CalGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected net.sf.orcc.cal.ui.contentassist.antlr.internal.InternalCalParser createParser() {
		net.sf.orcc.cal.ui.contentassist.antlr.internal.InternalCalParser result = new net.sf.orcc.cal.ui.contentassist.antlr.internal.InternalCalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAstEntityAccess().getAlternatives_3(), "rule__AstEntity__Alternatives_3");
					put(grammarAccess.getAstUnitAccess().getAlternatives_2(), "rule__AstUnit__Alternatives_2");
					put(grammarAccess.getAstActorAccess().getAlternatives_8(), "rule__AstActor__Alternatives_8");
					put(grammarAccess.getAstActorAccess().getAlternatives_9(), "rule__AstActor__Alternatives_9");
					put(grammarAccess.getAstTransitionAccess().getAlternatives_5(), "rule__AstTransition__Alternatives_5");
					put(grammarAccess.getRegExpPostfixAccess().getUnaryOperatorAlternatives_1_1_0(), "rule__RegExpPostfix__UnaryOperatorAlternatives_1_1_0");
					put(grammarAccess.getRegExpGroupingAccess().getAlternatives(), "rule__RegExpGrouping__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getAstExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionAndAccess().getOperatorAlternatives_1_1_0(), "rule__ExpressionAnd__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionEqAccess().getOperatorAlternatives_1_1_0(), "rule__ExpressionEq__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionRelationalAccess().getOperatorAlternatives_1_1_0(), "rule__ExpressionRelational__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionShiftAccess().getOperatorAlternatives_1_1_0(), "rule__ExpressionShift__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionAdditiveAccess().getOperatorAlternatives_1_1_0(), "rule__ExpressionAdditive__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionMultiplicativeAccess().getOperatorAlternatives_1_1_0(), "rule__ExpressionMultiplicative__OperatorAlternatives_1_1_0");
					put(grammarAccess.getExpressionUnaryAccess().getAlternatives(), "rule__ExpressionUnary__Alternatives");
					put(grammarAccess.getExpressionUnaryAccess().getUnaryOperatorAlternatives_0_1_0(), "rule__ExpressionUnary__UnaryOperatorAlternatives_0_1_0");
					put(grammarAccess.getExpressionPostfixAccess().getAlternatives(), "rule__ExpressionPostfix__Alternatives");
					put(grammarAccess.getExpressionLiteralAccess().getAlternatives(), "rule__ExpressionLiteral__Alternatives");
					put(grammarAccess.getBOOLAccess().getAlternatives(), "rule__BOOL__Alternatives");
					put(grammarAccess.getExpressionIntegerAccess().getValueAlternatives_0(), "rule__ExpressionInteger__ValueAlternatives_0");
					put(grammarAccess.getAstTypeAccess().getAlternatives(), "rule__AstType__Alternatives");
					put(grammarAccess.getValuedVariableDeclarationAccess().getAlternatives_1_0(), "rule__ValuedVariableDeclaration__Alternatives_1_0");
					put(grammarAccess.getAstEntityAccess().getGroup(), "rule__AstEntity__Group__0");
					put(grammarAccess.getAstEntityAccess().getGroup_0(), "rule__AstEntity__Group_0__0");
					put(grammarAccess.getAstEntityAccess().getGroup_3_0(), "rule__AstEntity__Group_3_0__0");
					put(grammarAccess.getAstEntityAccess().getGroup_3_1(), "rule__AstEntity__Group_3_1__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getAstUnitAccess().getGroup(), "rule__AstUnit__Group__0");
					put(grammarAccess.getConstantVariableAccess().getGroup(), "rule__ConstantVariable__Group__0");
					put(grammarAccess.getAstActorAccess().getGroup(), "rule__AstActor__Group__0");
					put(grammarAccess.getAstActorAccess().getGroup_2(), "rule__AstActor__Group_2__0");
					put(grammarAccess.getAstActorAccess().getGroup_2_1(), "rule__AstActor__Group_2_1__0");
					put(grammarAccess.getAstActorAccess().getGroup_4(), "rule__AstActor__Group_4__0");
					put(grammarAccess.getAstActorAccess().getGroup_4_1(), "rule__AstActor__Group_4_1__0");
					put(grammarAccess.getAstActorAccess().getGroup_6(), "rule__AstActor__Group_6__0");
					put(grammarAccess.getAstActorAccess().getGroup_6_1(), "rule__AstActor__Group_6_1__0");
					put(grammarAccess.getAstPortAccess().getGroup(), "rule__AstPort__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_4(), "rule__Function__Group_4__0");
					put(grammarAccess.getFunctionAccess().getGroup_4_1(), "rule__Function__Group_4_1__0");
					put(grammarAccess.getFunctionAccess().getGroup_8(), "rule__Function__Group_8__0");
					put(grammarAccess.getFunctionAccess().getGroup_8_0(), "rule__Function__Group_8_0__0");
					put(grammarAccess.getFunctionAccess().getGroup_8_0_2(), "rule__Function__Group_8_0_2__0");
					put(grammarAccess.getAstProcedureAccess().getGroup(), "rule__AstProcedure__Group__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_4(), "rule__AstProcedure__Group_4__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_4_1(), "rule__AstProcedure__Group_4_1__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_6(), "rule__AstProcedure__Group_6__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_6_0(), "rule__AstProcedure__Group_6_0__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_6_0_2(), "rule__AstProcedure__Group_6_0_2__0");
					put(grammarAccess.getActorParameterAccess().getGroup(), "rule__ActorParameter__Group__0");
					put(grammarAccess.getActorParameterAccess().getGroup_1(), "rule__ActorParameter__Group_1__0");
					put(grammarAccess.getStateVariableAccess().getGroup(), "rule__StateVariable__Group__0");
					put(grammarAccess.getAstTagAccess().getGroup(), "rule__AstTag__Group__0");
					put(grammarAccess.getAstTagAccess().getGroup_1(), "rule__AstTag__Group_1__0");
					put(grammarAccess.getInequalityAccess().getGroup(), "rule__Inequality__Group__0");
					put(grammarAccess.getInequalityAccess().getGroup_1(), "rule__Inequality__Group_1__0");
					put(grammarAccess.getPriorityAccess().getGroup(), "rule__Priority__Group__0");
					put(grammarAccess.getScheduleFsmAccess().getGroup(), "rule__ScheduleFsm__Group__0");
					put(grammarAccess.getFsmAccess().getGroup(), "rule__Fsm__Group__0");
					put(grammarAccess.getAstTransitionAccess().getGroup(), "rule__AstTransition__Group__0");
					put(grammarAccess.getExternalTargetAccess().getGroup(), "rule__ExternalTarget__Group__0");
					put(grammarAccess.getScheduleRegExpAccess().getGroup(), "rule__ScheduleRegExp__Group__0");
					put(grammarAccess.getRegExpAccess().getGroup(), "rule__RegExp__Group__0");
					put(grammarAccess.getRegExpAccess().getGroup_1(), "rule__RegExp__Group_1__0");
					put(grammarAccess.getRegExpConcatenationAccess().getGroup(), "rule__RegExpConcatenation__Group__0");
					put(grammarAccess.getRegExpConcatenationAccess().getGroup_1(), "rule__RegExpConcatenation__Group_1__0");
					put(grammarAccess.getRegExpPostfixAccess().getGroup(), "rule__RegExpPostfix__Group__0");
					put(grammarAccess.getRegExpPostfixAccess().getGroup_1(), "rule__RegExpPostfix__Group_1__0");
					put(grammarAccess.getRegExpGroupingAccess().getGroup_1(), "rule__RegExpGrouping__Group_1__0");
					put(grammarAccess.getRegExpTerminalAccess().getGroup(), "rule__RegExpTerminal__Group__0");
					put(grammarAccess.getLocalFsmAccess().getGroup(), "rule__LocalFsm__Group__0");
					put(grammarAccess.getAstActionAccess().getGroup(), "rule__AstAction__Group__0");
					put(grammarAccess.getAstActionAccess().getGroup_2(), "rule__AstAction__Group_2__0");
					put(grammarAccess.getAstActionAccess().getGroup_4(), "rule__AstAction__Group_4__0");
					put(grammarAccess.getAstActionAccess().getGroup_4_1(), "rule__AstAction__Group_4_1__0");
					put(grammarAccess.getAstActionAccess().getGroup_6(), "rule__AstAction__Group_6__0");
					put(grammarAccess.getAstActionAccess().getGroup_6_1(), "rule__AstAction__Group_6_1__0");
					put(grammarAccess.getAstActionAccess().getGroup_7(), "rule__AstAction__Group_7__0");
					put(grammarAccess.getAstActionAccess().getGroup_8(), "rule__AstAction__Group_8__0");
					put(grammarAccess.getAstActionAccess().getGroup_8_2(), "rule__AstAction__Group_8_2__0");
					put(grammarAccess.getAstActionAccess().getGroup_9(), "rule__AstAction__Group_9__0");
					put(grammarAccess.getInitializeAccess().getGroup(), "rule__Initialize__Group__0");
					put(grammarAccess.getInitializeAccess().getGroup_2(), "rule__Initialize__Group_2__0");
					put(grammarAccess.getInitializeAccess().getGroup_5(), "rule__Initialize__Group_5__0");
					put(grammarAccess.getInitializeAccess().getGroup_5_1(), "rule__Initialize__Group_5_1__0");
					put(grammarAccess.getInitializeAccess().getGroup_6(), "rule__Initialize__Group_6__0");
					put(grammarAccess.getInitializeAccess().getGroup_7(), "rule__Initialize__Group_7__0");
					put(grammarAccess.getInitializeAccess().getGroup_7_2(), "rule__Initialize__Group_7_2__0");
					put(grammarAccess.getInitializeAccess().getGroup_8(), "rule__Initialize__Group_8__0");
					put(grammarAccess.getInputPatternAccess().getGroup(), "rule__InputPattern__Group__0");
					put(grammarAccess.getInputPatternAccess().getGroup_4(), "rule__InputPattern__Group_4__0");
					put(grammarAccess.getInputPatternAccess().getGroup_6(), "rule__InputPattern__Group_6__0");
					put(grammarAccess.getOutputPatternAccess().getGroup(), "rule__OutputPattern__Group__0");
					put(grammarAccess.getOutputPatternAccess().getGroup_4(), "rule__OutputPattern__Group_4__0");
					put(grammarAccess.getOutputPatternAccess().getGroup_6(), "rule__OutputPattern__Group_6__0");
					put(grammarAccess.getGuardAccess().getGroup(), "rule__Guard__Group__0");
					put(grammarAccess.getGuardAccess().getGroup_2(), "rule__Guard__Group_2__0");
					put(grammarAccess.getStatementAssignAccess().getGroup(), "rule__StatementAssign__Group__0");
					put(grammarAccess.getStatementAssignAccess().getGroup_2(), "rule__StatementAssign__Group_2__0");
					put(grammarAccess.getStatementCallAccess().getGroup(), "rule__StatementCall__Group__0");
					put(grammarAccess.getStatementCallAccess().getGroup_3(), "rule__StatementCall__Group_3__0");
					put(grammarAccess.getStatementCallAccess().getGroup_3_1(), "rule__StatementCall__Group_3_1__0");
					put(grammarAccess.getStatementForeachAccess().getGroup(), "rule__StatementForeach__Group__0");
					put(grammarAccess.getStatementIfAccess().getGroup(), "rule__StatementIf__Group__0");
					put(grammarAccess.getStatementIfAccess().getGroup_6(), "rule__StatementIf__Group_6__0");
					put(grammarAccess.getStatementElsifAccess().getGroup(), "rule__StatementElsif__Group__0");
					put(grammarAccess.getStatementWhileAccess().getGroup(), "rule__StatementWhile__Group__0");
					put(grammarAccess.getAstExpressionAccess().getGroup(), "rule__AstExpression__Group__0");
					put(grammarAccess.getAstExpressionAccess().getGroup_1(), "rule__AstExpression__Group_1__0");
					put(grammarAccess.getExpressionAndAccess().getGroup(), "rule__ExpressionAnd__Group__0");
					put(grammarAccess.getExpressionAndAccess().getGroup_1(), "rule__ExpressionAnd__Group_1__0");
					put(grammarAccess.getExpressionBitorAccess().getGroup(), "rule__ExpressionBitor__Group__0");
					put(grammarAccess.getExpressionBitorAccess().getGroup_1(), "rule__ExpressionBitor__Group_1__0");
					put(grammarAccess.getExpressionBitxorAccess().getGroup(), "rule__ExpressionBitxor__Group__0");
					put(grammarAccess.getExpressionBitxorAccess().getGroup_1(), "rule__ExpressionBitxor__Group_1__0");
					put(grammarAccess.getExpressionBitandAccess().getGroup(), "rule__ExpressionBitand__Group__0");
					put(grammarAccess.getExpressionBitandAccess().getGroup_1(), "rule__ExpressionBitand__Group_1__0");
					put(grammarAccess.getExpressionEqAccess().getGroup(), "rule__ExpressionEq__Group__0");
					put(grammarAccess.getExpressionEqAccess().getGroup_1(), "rule__ExpressionEq__Group_1__0");
					put(grammarAccess.getExpressionRelationalAccess().getGroup(), "rule__ExpressionRelational__Group__0");
					put(grammarAccess.getExpressionRelationalAccess().getGroup_1(), "rule__ExpressionRelational__Group_1__0");
					put(grammarAccess.getExpressionShiftAccess().getGroup(), "rule__ExpressionShift__Group__0");
					put(grammarAccess.getExpressionShiftAccess().getGroup_1(), "rule__ExpressionShift__Group_1__0");
					put(grammarAccess.getExpressionAdditiveAccess().getGroup(), "rule__ExpressionAdditive__Group__0");
					put(grammarAccess.getExpressionAdditiveAccess().getGroup_1(), "rule__ExpressionAdditive__Group_1__0");
					put(grammarAccess.getExpressionMultiplicativeAccess().getGroup(), "rule__ExpressionMultiplicative__Group__0");
					put(grammarAccess.getExpressionMultiplicativeAccess().getGroup_1(), "rule__ExpressionMultiplicative__Group_1__0");
					put(grammarAccess.getExpressionExpAccess().getGroup(), "rule__ExpressionExp__Group__0");
					put(grammarAccess.getExpressionExpAccess().getGroup_1(), "rule__ExpressionExp__Group_1__0");
					put(grammarAccess.getExpressionUnaryAccess().getGroup_0(), "rule__ExpressionUnary__Group_0__0");
					put(grammarAccess.getExpressionPostfixAccess().getGroup_6(), "rule__ExpressionPostfix__Group_6__0");
					put(grammarAccess.getExpressionCallAccess().getGroup(), "rule__ExpressionCall__Group__0");
					put(grammarAccess.getExpressionCallAccess().getGroup_3(), "rule__ExpressionCall__Group_3__0");
					put(grammarAccess.getExpressionCallAccess().getGroup_3_1(), "rule__ExpressionCall__Group_3_1__0");
					put(grammarAccess.getExpressionIndexAccess().getGroup(), "rule__ExpressionIndex__Group__0");
					put(grammarAccess.getExpressionIndexAccess().getGroup_1(), "rule__ExpressionIndex__Group_1__0");
					put(grammarAccess.getExpressionIfAccess().getGroup(), "rule__ExpressionIf__Group__0");
					put(grammarAccess.getExpressionElsifAccess().getGroup(), "rule__ExpressionElsif__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_2(), "rule__ExpressionList__Group_2__0");
					put(grammarAccess.getExpressionListAccess().getGroup_3(), "rule__ExpressionList__Group_3__0");
					put(grammarAccess.getExpressionListAccess().getGroup_3_2(), "rule__ExpressionList__Group_3_2__0");
					put(grammarAccess.getGeneratorAccess().getGroup(), "rule__Generator__Group__0");
					put(grammarAccess.getAstTypeBoolAccess().getGroup(), "rule__AstTypeBool__Group__0");
					put(grammarAccess.getAstTypeFloatAccess().getGroup(), "rule__AstTypeFloat__Group__0");
					put(grammarAccess.getAstTypeHalfAccess().getGroup(), "rule__AstTypeHalf__Group__0");
					put(grammarAccess.getAstTypeDoubleAccess().getGroup(), "rule__AstTypeDouble__Group__0");
					put(grammarAccess.getAstTypeIntAccess().getGroup(), "rule__AstTypeInt__Group__0");
					put(grammarAccess.getAstTypeIntAccess().getGroup_2(), "rule__AstTypeInt__Group_2__0");
					put(grammarAccess.getAstTypeListAccess().getGroup(), "rule__AstTypeList__Group__0");
					put(grammarAccess.getAstTypeStringAccess().getGroup(), "rule__AstTypeString__Group__0");
					put(grammarAccess.getAstTypeUintAccess().getGroup(), "rule__AstTypeUint__Group__0");
					put(grammarAccess.getAstTypeUintAccess().getGroup_2(), "rule__AstTypeUint__Group_2__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_3(), "rule__VariableDeclaration__Group_3__0");
					put(grammarAccess.getValuedVariableDeclarationAccess().getGroup(), "rule__ValuedVariableDeclaration__Group__0");
					put(grammarAccess.getValuedVariableDeclarationAccess().getGroup_1(), "rule__ValuedVariableDeclaration__Group_1__0");
					put(grammarAccess.getAstAnnotationAccess().getGroup(), "rule__AstAnnotation__Group__0");
					put(grammarAccess.getAstAnnotationAccess().getGroup_2(), "rule__AstAnnotation__Group_2__0");
					put(grammarAccess.getAstAnnotationAccess().getGroup_2_2(), "rule__AstAnnotation__Group_2_2__0");
					put(grammarAccess.getAnnotationArgumentAccess().getGroup(), "rule__AnnotationArgument__Group__0");
					put(grammarAccess.getAnnotationArgumentAccess().getGroup_1(), "rule__AnnotationArgument__Group_1__0");
					put(grammarAccess.getAstEntityAccess().getPackageAssignment_0_1(), "rule__AstEntity__PackageAssignment_0_1");
					put(grammarAccess.getAstEntityAccess().getImportsAssignment_1(), "rule__AstEntity__ImportsAssignment_1");
					put(grammarAccess.getAstEntityAccess().getAnnotationsAssignment_2(), "rule__AstEntity__AnnotationsAssignment_2");
					put(grammarAccess.getAstEntityAccess().getNameAssignment_3_0_1(), "rule__AstEntity__NameAssignment_3_0_1");
					put(grammarAccess.getAstEntityAccess().getActorAssignment_3_0_2(), "rule__AstEntity__ActorAssignment_3_0_2");
					put(grammarAccess.getAstEntityAccess().getNameAssignment_3_1_1(), "rule__AstEntity__NameAssignment_3_1_1");
					put(grammarAccess.getAstEntityAccess().getUnitAssignment_3_1_2(), "rule__AstEntity__UnitAssignment_3_1_2");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getAstUnitAccess().getFunctionsAssignment_2_0(), "rule__AstUnit__FunctionsAssignment_2_0");
					put(grammarAccess.getAstUnitAccess().getProceduresAssignment_2_1(), "rule__AstUnit__ProceduresAssignment_2_1");
					put(grammarAccess.getAstUnitAccess().getVariablesAssignment_2_2(), "rule__AstUnit__VariablesAssignment_2_2");
					put(grammarAccess.getConstantVariableAccess().getConstantAssignment_1(), "rule__ConstantVariable__ConstantAssignment_1");
					put(grammarAccess.getConstantVariableAccess().getValueAssignment_2(), "rule__ConstantVariable__ValueAssignment_2");
					put(grammarAccess.getAstActorAccess().getParametersAssignment_2_0(), "rule__AstActor__ParametersAssignment_2_0");
					put(grammarAccess.getAstActorAccess().getParametersAssignment_2_1_1(), "rule__AstActor__ParametersAssignment_2_1_1");
					put(grammarAccess.getAstActorAccess().getInputsAssignment_4_0(), "rule__AstActor__InputsAssignment_4_0");
					put(grammarAccess.getAstActorAccess().getInputsAssignment_4_1_1(), "rule__AstActor__InputsAssignment_4_1_1");
					put(grammarAccess.getAstActorAccess().getOutputsAssignment_6_0(), "rule__AstActor__OutputsAssignment_6_0");
					put(grammarAccess.getAstActorAccess().getOutputsAssignment_6_1_1(), "rule__AstActor__OutputsAssignment_6_1_1");
					put(grammarAccess.getAstActorAccess().getFunctionsAssignment_8_0(), "rule__AstActor__FunctionsAssignment_8_0");
					put(grammarAccess.getAstActorAccess().getProceduresAssignment_8_1(), "rule__AstActor__ProceduresAssignment_8_1");
					put(grammarAccess.getAstActorAccess().getActionsAssignment_8_2(), "rule__AstActor__ActionsAssignment_8_2");
					put(grammarAccess.getAstActorAccess().getInitializesAssignment_8_3(), "rule__AstActor__InitializesAssignment_8_3");
					put(grammarAccess.getAstActorAccess().getStateVariablesAssignment_8_4(), "rule__AstActor__StateVariablesAssignment_8_4");
					put(grammarAccess.getAstActorAccess().getLocalFsmsAssignment_8_5(), "rule__AstActor__LocalFsmsAssignment_8_5");
					put(grammarAccess.getAstActorAccess().getScheduleFsmAssignment_9_0(), "rule__AstActor__ScheduleFsmAssignment_9_0");
					put(grammarAccess.getAstActorAccess().getScheduleRegExpAssignment_9_1(), "rule__AstActor__ScheduleRegExpAssignment_9_1");
					put(grammarAccess.getAstActorAccess().getPrioritiesAssignment_10(), "rule__AstActor__PrioritiesAssignment_10");
					put(grammarAccess.getAstPortAccess().getAnnotationsAssignment_0(), "rule__AstPort__AnnotationsAssignment_0");
					put(grammarAccess.getAstPortAccess().getTypeAssignment_1(), "rule__AstPort__TypeAssignment_1");
					put(grammarAccess.getAstPortAccess().getNameAssignment_2(), "rule__AstPort__NameAssignment_2");
					put(grammarAccess.getFunctionAccess().getAnnotationsAssignment_0(), "rule__Function__AnnotationsAssignment_0");
					put(grammarAccess.getFunctionAccess().getNameAssignment_2(), "rule__Function__NameAssignment_2");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_4_0(), "rule__Function__ParametersAssignment_4_0");
					put(grammarAccess.getFunctionAccess().getParametersAssignment_4_1_1(), "rule__Function__ParametersAssignment_4_1_1");
					put(grammarAccess.getFunctionAccess().getTypeAssignment_7(), "rule__Function__TypeAssignment_7");
					put(grammarAccess.getFunctionAccess().getVariablesAssignment_8_0_1(), "rule__Function__VariablesAssignment_8_0_1");
					put(grammarAccess.getFunctionAccess().getVariablesAssignment_8_0_2_1(), "rule__Function__VariablesAssignment_8_0_2_1");
					put(grammarAccess.getFunctionAccess().getExpressionAssignment_8_2(), "rule__Function__ExpressionAssignment_8_2");
					put(grammarAccess.getAstProcedureAccess().getAnnotationsAssignment_0(), "rule__AstProcedure__AnnotationsAssignment_0");
					put(grammarAccess.getAstProcedureAccess().getNameAssignment_2(), "rule__AstProcedure__NameAssignment_2");
					put(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_0(), "rule__AstProcedure__ParametersAssignment_4_0");
					put(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_1_1(), "rule__AstProcedure__ParametersAssignment_4_1_1");
					put(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_0_1(), "rule__AstProcedure__VariablesAssignment_6_0_1");
					put(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_0_2_1(), "rule__AstProcedure__VariablesAssignment_6_0_2_1");
					put(grammarAccess.getAstProcedureAccess().getStatementsAssignment_6_2(), "rule__AstProcedure__StatementsAssignment_6_2");
					put(grammarAccess.getActorParameterAccess().getValueAssignment_1_1(), "rule__ActorParameter__ValueAssignment_1_1");
					put(grammarAccess.getAstTagAccess().getIdentifiersAssignment_0(), "rule__AstTag__IdentifiersAssignment_0");
					put(grammarAccess.getAstTagAccess().getIdentifiersAssignment_1_1(), "rule__AstTag__IdentifiersAssignment_1_1");
					put(grammarAccess.getInequalityAccess().getTagsAssignment_0(), "rule__Inequality__TagsAssignment_0");
					put(grammarAccess.getInequalityAccess().getTagsAssignment_1_1(), "rule__Inequality__TagsAssignment_1_1");
					put(grammarAccess.getPriorityAccess().getInequalitiesAssignment_2(), "rule__Priority__InequalitiesAssignment_2");
					put(grammarAccess.getScheduleFsmAccess().getInitialStateAssignment_2(), "rule__ScheduleFsm__InitialStateAssignment_2");
					put(grammarAccess.getScheduleFsmAccess().getContentsAssignment_4(), "rule__ScheduleFsm__ContentsAssignment_4");
					put(grammarAccess.getFsmAccess().getTransitionsAssignment_1(), "rule__Fsm__TransitionsAssignment_1");
					put(grammarAccess.getAstTransitionAccess().getSourceAssignment_0(), "rule__AstTransition__SourceAssignment_0");
					put(grammarAccess.getAstTransitionAccess().getTagAssignment_2(), "rule__AstTransition__TagAssignment_2");
					put(grammarAccess.getAstTransitionAccess().getTargetAssignment_5_0(), "rule__AstTransition__TargetAssignment_5_0");
					put(grammarAccess.getAstTransitionAccess().getExternalTargetAssignment_5_1(), "rule__AstTransition__ExternalTargetAssignment_5_1");
					put(grammarAccess.getExternalTargetAccess().getFsmAssignment_0(), "rule__ExternalTarget__FsmAssignment_0");
					put(grammarAccess.getExternalTargetAccess().getStateAssignment_2(), "rule__ExternalTarget__StateAssignment_2");
					put(grammarAccess.getExternalTargetAccess().getFromAssignment_4(), "rule__ExternalTarget__FromAssignment_4");
					put(grammarAccess.getExternalTargetAccess().getToAssignment_6(), "rule__ExternalTarget__ToAssignment_6");
					put(grammarAccess.getAstStateAccess().getNameAssignment(), "rule__AstState__NameAssignment");
					put(grammarAccess.getScheduleRegExpAccess().getExpAssignment_2(), "rule__ScheduleRegExp__ExpAssignment_2");
					put(grammarAccess.getRegExpAccess().getOperatorAssignment_1_1(), "rule__RegExp__OperatorAssignment_1_1");
					put(grammarAccess.getRegExpAccess().getRightAssignment_1_2(), "rule__RegExp__RightAssignment_1_2");
					put(grammarAccess.getRegExpConcatenationAccess().getRightAssignment_1_1(), "rule__RegExpConcatenation__RightAssignment_1_1");
					put(grammarAccess.getRegExpPostfixAccess().getUnaryOperatorAssignment_1_1(), "rule__RegExpPostfix__UnaryOperatorAssignment_1_1");
					put(grammarAccess.getRegExpTerminalAccess().getTagAssignment_1(), "rule__RegExpTerminal__TagAssignment_1");
					put(grammarAccess.getLocalFsmAccess().getNameAssignment_2(), "rule__LocalFsm__NameAssignment_2");
					put(grammarAccess.getLocalFsmAccess().getContentsAssignment_4(), "rule__LocalFsm__ContentsAssignment_4");
					put(grammarAccess.getAstActionAccess().getAnnotationsAssignment_1(), "rule__AstAction__AnnotationsAssignment_1");
					put(grammarAccess.getAstActionAccess().getTagAssignment_2_0(), "rule__AstAction__TagAssignment_2_0");
					put(grammarAccess.getAstActionAccess().getInputsAssignment_4_0(), "rule__AstAction__InputsAssignment_4_0");
					put(grammarAccess.getAstActionAccess().getInputsAssignment_4_1_1(), "rule__AstAction__InputsAssignment_4_1_1");
					put(grammarAccess.getAstActionAccess().getOutputsAssignment_6_0(), "rule__AstAction__OutputsAssignment_6_0");
					put(grammarAccess.getAstActionAccess().getOutputsAssignment_6_1_1(), "rule__AstAction__OutputsAssignment_6_1_1");
					put(grammarAccess.getAstActionAccess().getGuardAssignment_7_1(), "rule__AstAction__GuardAssignment_7_1");
					put(grammarAccess.getAstActionAccess().getVariablesAssignment_8_1(), "rule__AstAction__VariablesAssignment_8_1");
					put(grammarAccess.getAstActionAccess().getVariablesAssignment_8_2_1(), "rule__AstAction__VariablesAssignment_8_2_1");
					put(grammarAccess.getAstActionAccess().getStatementsAssignment_9_1(), "rule__AstAction__StatementsAssignment_9_1");
					put(grammarAccess.getInitializeAccess().getAnnotationsAssignment_1(), "rule__Initialize__AnnotationsAssignment_1");
					put(grammarAccess.getInitializeAccess().getTagAssignment_2_0(), "rule__Initialize__TagAssignment_2_0");
					put(grammarAccess.getInitializeAccess().getOutputsAssignment_5_0(), "rule__Initialize__OutputsAssignment_5_0");
					put(grammarAccess.getInitializeAccess().getOutputsAssignment_5_1_1(), "rule__Initialize__OutputsAssignment_5_1_1");
					put(grammarAccess.getInitializeAccess().getGuardAssignment_6_1(), "rule__Initialize__GuardAssignment_6_1");
					put(grammarAccess.getInitializeAccess().getVariablesAssignment_7_1(), "rule__Initialize__VariablesAssignment_7_1");
					put(grammarAccess.getInitializeAccess().getVariablesAssignment_7_2_1(), "rule__Initialize__VariablesAssignment_7_2_1");
					put(grammarAccess.getInitializeAccess().getStatementsAssignment_8_1(), "rule__Initialize__StatementsAssignment_8_1");
					put(grammarAccess.getTokenAccess().getNameAssignment(), "rule__Token__NameAssignment");
					put(grammarAccess.getInputPatternAccess().getPortAssignment_0(), "rule__InputPattern__PortAssignment_0");
					put(grammarAccess.getInputPatternAccess().getTokensAssignment_3(), "rule__InputPattern__TokensAssignment_3");
					put(grammarAccess.getInputPatternAccess().getTokensAssignment_4_1(), "rule__InputPattern__TokensAssignment_4_1");
					put(grammarAccess.getInputPatternAccess().getRepeatAssignment_6_1(), "rule__InputPattern__RepeatAssignment_6_1");
					put(grammarAccess.getOutputPatternAccess().getPortAssignment_0(), "rule__OutputPattern__PortAssignment_0");
					put(grammarAccess.getOutputPatternAccess().getValuesAssignment_3(), "rule__OutputPattern__ValuesAssignment_3");
					put(grammarAccess.getOutputPatternAccess().getValuesAssignment_4_1(), "rule__OutputPattern__ValuesAssignment_4_1");
					put(grammarAccess.getOutputPatternAccess().getRepeatAssignment_6_1(), "rule__OutputPattern__RepeatAssignment_6_1");
					put(grammarAccess.getGuardAccess().getExpressionsAssignment_1(), "rule__Guard__ExpressionsAssignment_1");
					put(grammarAccess.getGuardAccess().getExpressionsAssignment_2_1(), "rule__Guard__ExpressionsAssignment_2_1");
					put(grammarAccess.getStatementAssignAccess().getAnnotationsAssignment_0(), "rule__StatementAssign__AnnotationsAssignment_0");
					put(grammarAccess.getStatementAssignAccess().getTargetAssignment_1(), "rule__StatementAssign__TargetAssignment_1");
					put(grammarAccess.getStatementAssignAccess().getIndexesAssignment_2_1(), "rule__StatementAssign__IndexesAssignment_2_1");
					put(grammarAccess.getStatementAssignAccess().getValueAssignment_4(), "rule__StatementAssign__ValueAssignment_4");
					put(grammarAccess.getStatementCallAccess().getAnnotationsAssignment_0(), "rule__StatementCall__AnnotationsAssignment_0");
					put(grammarAccess.getStatementCallAccess().getProcedureAssignment_1(), "rule__StatementCall__ProcedureAssignment_1");
					put(grammarAccess.getStatementCallAccess().getArgumentsAssignment_3_0(), "rule__StatementCall__ArgumentsAssignment_3_0");
					put(grammarAccess.getStatementCallAccess().getArgumentsAssignment_3_1_1(), "rule__StatementCall__ArgumentsAssignment_3_1_1");
					put(grammarAccess.getStatementForeachAccess().getAnnotationsAssignment_0(), "rule__StatementForeach__AnnotationsAssignment_0");
					put(grammarAccess.getStatementForeachAccess().getVariableAssignment_2(), "rule__StatementForeach__VariableAssignment_2");
					put(grammarAccess.getStatementForeachAccess().getLowerAssignment_4(), "rule__StatementForeach__LowerAssignment_4");
					put(grammarAccess.getStatementForeachAccess().getHigherAssignment_6(), "rule__StatementForeach__HigherAssignment_6");
					put(grammarAccess.getStatementForeachAccess().getStatementsAssignment_8(), "rule__StatementForeach__StatementsAssignment_8");
					put(grammarAccess.getStatementIfAccess().getAnnotationsAssignment_0(), "rule__StatementIf__AnnotationsAssignment_0");
					put(grammarAccess.getStatementIfAccess().getConditionAssignment_2(), "rule__StatementIf__ConditionAssignment_2");
					put(grammarAccess.getStatementIfAccess().getThenAssignment_4(), "rule__StatementIf__ThenAssignment_4");
					put(grammarAccess.getStatementIfAccess().getElsifsAssignment_5(), "rule__StatementIf__ElsifsAssignment_5");
					put(grammarAccess.getStatementIfAccess().getElseAssignment_6_1(), "rule__StatementIf__ElseAssignment_6_1");
					put(grammarAccess.getStatementElsifAccess().getConditionAssignment_1(), "rule__StatementElsif__ConditionAssignment_1");
					put(grammarAccess.getStatementElsifAccess().getThenAssignment_3(), "rule__StatementElsif__ThenAssignment_3");
					put(grammarAccess.getStatementWhileAccess().getAnnotationsAssignment_0(), "rule__StatementWhile__AnnotationsAssignment_0");
					put(grammarAccess.getStatementWhileAccess().getConditionAssignment_2(), "rule__StatementWhile__ConditionAssignment_2");
					put(grammarAccess.getStatementWhileAccess().getStatementsAssignment_4(), "rule__StatementWhile__StatementsAssignment_4");
					put(grammarAccess.getAstExpressionAccess().getOperatorAssignment_1_1(), "rule__AstExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionAccess().getRightAssignment_1_2(), "rule__AstExpression__RightAssignment_1_2");
					put(grammarAccess.getExpressionAndAccess().getOperatorAssignment_1_1(), "rule__ExpressionAnd__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionAndAccess().getRightAssignment_1_2(), "rule__ExpressionAnd__RightAssignment_1_2");
					put(grammarAccess.getExpressionBitorAccess().getOperatorAssignment_1_1(), "rule__ExpressionBitor__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionBitorAccess().getRightAssignment_1_2(), "rule__ExpressionBitor__RightAssignment_1_2");
					put(grammarAccess.getExpressionBitxorAccess().getOperatorAssignment_1_1(), "rule__ExpressionBitxor__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionBitxorAccess().getRightAssignment_1_2(), "rule__ExpressionBitxor__RightAssignment_1_2");
					put(grammarAccess.getExpressionBitandAccess().getOperatorAssignment_1_1(), "rule__ExpressionBitand__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionBitandAccess().getRightAssignment_1_2(), "rule__ExpressionBitand__RightAssignment_1_2");
					put(grammarAccess.getExpressionEqAccess().getOperatorAssignment_1_1(), "rule__ExpressionEq__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionEqAccess().getRightAssignment_1_2(), "rule__ExpressionEq__RightAssignment_1_2");
					put(grammarAccess.getExpressionRelationalAccess().getOperatorAssignment_1_1(), "rule__ExpressionRelational__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionRelationalAccess().getRightAssignment_1_2(), "rule__ExpressionRelational__RightAssignment_1_2");
					put(grammarAccess.getExpressionShiftAccess().getOperatorAssignment_1_1(), "rule__ExpressionShift__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionShiftAccess().getRightAssignment_1_2(), "rule__ExpressionShift__RightAssignment_1_2");
					put(grammarAccess.getExpressionAdditiveAccess().getOperatorAssignment_1_1(), "rule__ExpressionAdditive__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionAdditiveAccess().getRightAssignment_1_2(), "rule__ExpressionAdditive__RightAssignment_1_2");
					put(grammarAccess.getExpressionMultiplicativeAccess().getOperatorAssignment_1_1(), "rule__ExpressionMultiplicative__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionMultiplicativeAccess().getRightAssignment_1_2(), "rule__ExpressionMultiplicative__RightAssignment_1_2");
					put(grammarAccess.getExpressionExpAccess().getOperatorAssignment_1_1(), "rule__ExpressionExp__OperatorAssignment_1_1");
					put(grammarAccess.getExpressionExpAccess().getRightAssignment_1_2(), "rule__ExpressionExp__RightAssignment_1_2");
					put(grammarAccess.getExpressionUnaryAccess().getUnaryOperatorAssignment_0_1(), "rule__ExpressionUnary__UnaryOperatorAssignment_0_1");
					put(grammarAccess.getExpressionUnaryAccess().getExpressionAssignment_0_2(), "rule__ExpressionUnary__ExpressionAssignment_0_2");
					put(grammarAccess.getExpressionCallAccess().getAnnotationsAssignment_0(), "rule__ExpressionCall__AnnotationsAssignment_0");
					put(grammarAccess.getExpressionCallAccess().getFunctionAssignment_1(), "rule__ExpressionCall__FunctionAssignment_1");
					put(grammarAccess.getExpressionCallAccess().getParametersAssignment_3_0(), "rule__ExpressionCall__ParametersAssignment_3_0");
					put(grammarAccess.getExpressionCallAccess().getParametersAssignment_3_1_1(), "rule__ExpressionCall__ParametersAssignment_3_1_1");
					put(grammarAccess.getExpressionIndexAccess().getSourceAssignment_0(), "rule__ExpressionIndex__SourceAssignment_0");
					put(grammarAccess.getExpressionIndexAccess().getIndexesAssignment_1_1(), "rule__ExpressionIndex__IndexesAssignment_1_1");
					put(grammarAccess.getExpressionIfAccess().getConditionAssignment_1(), "rule__ExpressionIf__ConditionAssignment_1");
					put(grammarAccess.getExpressionIfAccess().getThenAssignment_3(), "rule__ExpressionIf__ThenAssignment_3");
					put(grammarAccess.getExpressionIfAccess().getElsifsAssignment_4(), "rule__ExpressionIf__ElsifsAssignment_4");
					put(grammarAccess.getExpressionIfAccess().getElseAssignment_6(), "rule__ExpressionIf__ElseAssignment_6");
					put(grammarAccess.getExpressionElsifAccess().getConditionAssignment_1(), "rule__ExpressionElsif__ConditionAssignment_1");
					put(grammarAccess.getExpressionElsifAccess().getThenAssignment_3(), "rule__ExpressionElsif__ThenAssignment_3");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1(), "rule__ExpressionList__ExpressionsAssignment_1");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_2_1(), "rule__ExpressionList__ExpressionsAssignment_2_1");
					put(grammarAccess.getExpressionListAccess().getGeneratorsAssignment_3_1(), "rule__ExpressionList__GeneratorsAssignment_3_1");
					put(grammarAccess.getExpressionListAccess().getGeneratorsAssignment_3_2_1(), "rule__ExpressionList__GeneratorsAssignment_3_2_1");
					put(grammarAccess.getGeneratorAccess().getVariableAssignment_1(), "rule__Generator__VariableAssignment_1");
					put(grammarAccess.getGeneratorAccess().getLowerAssignment_3(), "rule__Generator__LowerAssignment_3");
					put(grammarAccess.getGeneratorAccess().getHigherAssignment_5(), "rule__Generator__HigherAssignment_5");
					put(grammarAccess.getExpressionVariableAccess().getValueAssignment(), "rule__ExpressionVariable__ValueAssignment");
					put(grammarAccess.getExpressionBooleanAccess().getValueAssignment(), "rule__ExpressionBoolean__ValueAssignment");
					put(grammarAccess.getExpressionFloatAccess().getValueAssignment(), "rule__ExpressionFloat__ValueAssignment");
					put(grammarAccess.getExpressionIntegerAccess().getValueAssignment(), "rule__ExpressionInteger__ValueAssignment");
					put(grammarAccess.getExpressionStringAccess().getValueAssignment(), "rule__ExpressionString__ValueAssignment");
					put(grammarAccess.getAstTypeIntAccess().getSizeAssignment_2_3(), "rule__AstTypeInt__SizeAssignment_2_3");
					put(grammarAccess.getAstTypeListAccess().getTypeAssignment_4(), "rule__AstTypeList__TypeAssignment_4");
					put(grammarAccess.getAstTypeListAccess().getSizeAssignment_8(), "rule__AstTypeList__SizeAssignment_8");
					put(grammarAccess.getAstTypeUintAccess().getSizeAssignment_2_3(), "rule__AstTypeUint__SizeAssignment_2_3");
					put(grammarAccess.getVariableDeclarationAccess().getAnnotationsAssignment_0(), "rule__VariableDeclaration__AnnotationsAssignment_0");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_1(), "rule__VariableDeclaration__TypeAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2(), "rule__VariableDeclaration__NameAssignment_2");
					put(grammarAccess.getVariableDeclarationAccess().getDimensionsAssignment_3_1(), "rule__VariableDeclaration__DimensionsAssignment_3_1");
					put(grammarAccess.getValuedVariableDeclarationAccess().getConstantAssignment_1_0_0(), "rule__ValuedVariableDeclaration__ConstantAssignment_1_0_0");
					put(grammarAccess.getValuedVariableDeclarationAccess().getValueAssignment_1_1(), "rule__ValuedVariableDeclaration__ValueAssignment_1_1");
					put(grammarAccess.getVariableReferenceAccess().getVariableAssignment(), "rule__VariableReference__VariableAssignment");
					put(grammarAccess.getAstAnnotationAccess().getNameAssignment_1(), "rule__AstAnnotation__NameAssignment_1");
					put(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_1(), "rule__AstAnnotation__ArgumentsAssignment_2_1");
					put(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_2_1(), "rule__AstAnnotation__ArgumentsAssignment_2_2_1");
					put(grammarAccess.getAnnotationArgumentAccess().getNameAssignment_0(), "rule__AnnotationArgument__NameAssignment_0");
					put(grammarAccess.getAnnotationArgumentAccess().getValueAssignment_1_1(), "rule__AnnotationArgument__ValueAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			net.sf.orcc.cal.ui.contentassist.antlr.internal.InternalCalParser typedParser = (net.sf.orcc.cal.ui.contentassist.antlr.internal.InternalCalParser) parser;
			typedParser.entryRuleAstEntity();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
